{{- if .Values.haulerFileserver.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hauler-fileserver
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hauler.labels" . | nindent 4 }}
    {{- with .Values.hauler.labels -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.hauler.annotations -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  replicas: {{ .Values.haulerFileserver.replicas }}
  selector:
    matchLabels:
      app: hauler-fileserver
      {{- include "hauler.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: hauler-fileserver
        {{- include "hauler.selectorLabels" . | nindent 8 }}
    spec:
      {{- if or .Values.haulerJobs.hauls.enabled .Values.haulerJobs.manifests.enabled }}
      initContainers:
        {{- if .Values.haulerJobs.hauls.enabled }}
        - name: wait-for-hauler-hauls-job
          image: {{ .Values.hauler.initContainers.image.repository }}:{{ .Values.hauler.initContainers.image.tag }}
          imagePullPolicy: {{ .Values.hauler.initContainers.imagePullPolicy }}
          args: ["wait", "--for=condition=complete", "job", "hauler-hauls-job", "--namespace", "{{ .Release.Namespace }}", "--timeout={{ .Values.hauler.initContainers.timeout }}"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
        {{- end }}
        {{- if .Values.haulerJobs.manifests.enabled }}
        - name: wait-for-hauler-manifests-job
          image: {{ .Values.hauler.initContainers.image.repository }}:{{ .Values.hauler.initContainers.image.tag }}
          imagePullPolicy: {{ .Values.hauler.initContainers.imagePullPolicy }}
          args: ["wait", "--for=condition=complete", "job", "hauler-manifests-job", "--namespace", "{{ .Release.Namespace }}", "--timeout={{ .Values.hauler.initContainers.timeout }}"]
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
        {{- end }}
      {{- end }}
      containers:
        - name: hauler-fileserver
          image: {{ .Values.hauler.image.repository }}:{{ .Values.hauler.image.tag }}
          imagePullPolicy: {{ .Values.hauler.imagePullPolicy }}
          args: ["store", "serve", "fileserver", "--port", "{{ .Values.haulerFileserver.port }}"]
          ports:
            - containerPort: {{ .Values.haulerFileserver.port }}
          volumeMounts:
            - name: hauler-data
              mountPath: /store
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: Always
      serviceAccountName: hauler-service-account
      volumes:
        - name: hauler-data
          persistentVolumeClaim:
            claimName: hauler-data
{{- end }}

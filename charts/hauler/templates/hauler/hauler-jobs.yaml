{{- if .Values.haulerJobs.hauls.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: hauler-hauls-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hauler.labels" . | nindent 4 }}
    {{- with .Values.hauler.labels -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.hauler.annotations -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    spec:
      initContainers:
        - name: hauler-fetch-hauls
          image: {{ .Values.haulerJobs.image.repository }}:{{ .Values.haulerJobs.image.tag }}
          imagePullPolicy: {{ .Values.haulerJobs.imagePullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              {{- range .Values.haulerJobs.hauls.artifacts }}
              curl -o /hauls/{{ .name }} {{ .path }} &&
              {{- end }}
              echo hauler fetch completed
          volumeMounts:
            - name: hauler-data
              mountPath: /hauls
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      containers:
        - name: hauler-load-hauls
          image: {{ .Values.hauler.image.repository }}:{{ .Values.hauler.image.tag }}
          imagePullPolicy: {{ .Values.hauler.imagePullPolicy }}
          args:
            - "store"
            - "load"
            {{- range .Values.haulerJobs.hauls.artifacts }}
            - "/hauls/{{ .name }}"
            {{- end }}
          volumeMounts:
            - name: hauler-data
              mountPath: /hauls
            - name: hauler-data
              mountPath: /store
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
        - name: hauler-data
          persistentVolumeClaim:
            claimName: hauler-data
{{- end }}
---
{{- if .Values.haulerJobs.manifests.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: hauler-manifests-job
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "hauler.labels" . | nindent 4 }}
    {{- with .Values.hauler.labels -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    {{- with .Values.hauler.annotations -}}
{{ toYaml . | nindent 4 }}
    {{- end }}
spec:
  template:
    spec:
      initContainers:
        - name: hauler-fetch-manifests
          image: {{ .Values.haulerJobs.image.repository }}:{{ .Values.haulerJobs.image.tag }}
          imagePullPolicy: {{ .Values.haulerJobs.imagePullPolicy }}
          command: ["/bin/sh", "-c"]
          args:
            - |
              {{- range .Values.haulerJobs.manifests.artifacts }}
              curl -o /manifests/{{ .name }} {{ .path }} &&
              {{- end }}
              echo hauler fetch completed
          volumeMounts:
            - name: hauler-data
              mountPath: /manifests
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      containers:
        - name: hauler-load-manifests
          image: {{ .Values.hauler.image.repository }}:{{ .Values.hauler.image.tag }}
          imagePullPolicy: {{ .Values.hauler.imagePullPolicy }}
          args:
            {{- range .Values.haulerJobs.manifests.artifacts }}
            - "store"
            - "sync"
            - "--files"
            - "/manifests/{{ .name }}"
            {{- end }}
          volumeMounts:
            - name: hauler-data
              mountPath: /manifests
            - name: hauler-data
              mountPath: /store
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
            runAsNonRoot: true
            runAsUser: 1001
            seccompProfile:
              type: RuntimeDefault
      restartPolicy: OnFailure
      volumes:
        - name: hauler-data
          persistentVolumeClaim:
            claimName: hauler-data
{{- end }}
